---
apiVersion: v1
kind: Template
metadata:
  name: dashdotdb
objects:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: dashdotcollector-queue
    name: dashdotcollector-queue
  spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: dashdotcollector-queue
    template:
      metadata:
        labels:
          app: dashdotcollector-queue
      spec:
        containers:
        - image: quay.io/app-sre/rabbitmq
          imagePullPolicy: Always
          name: dashdotcollector-queue
          ports:
          - name: dashdotcollector-queue
            containerPort: 5672
- apiVersion: v1
  kind: Service
  metadata:
    name: dashdotcollector-queue
    labels:
      app: dashdotcollector-queue
  spec:
    ports:
      - protocol: TCP
        port: 5672
        targetPort: 5672
        name: dashdotqueue
    selector:
      app: dashdotqueue
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: dashdotcollector-sched
    name: dashdotcollector-sched
  spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: dashdotcollector-sched
    template:
      metadata:
        labels:
          app: dashdotcollector-sched
      spec:
        containers:
        - image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: dashdotcollector-sched
          args: ["beat"]
          env:
            - name: DASHDOTDB_URL
              value: http://dashdotdb.dashdot.svc.cluster.local/api/v1
            - name: RABBITMQ_URL
              value: pyamqp://guest@dashdotcollector-queue.dashdot.svc.cluster.local//
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: dashdotcollector-worker
    name: dashdotcollector-worker
  spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: dashdotcollector-worker
    template:
      metadata:
        labels:
          app: dashdotcollector-worker
      spec:
        containers:
        - image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: dashdotcollector-worker
          args: ["worker"]
          env:
            - name: DASHDOTDB_URL
              value: http://dashdotdb.dashdot.svc.cluster.local/api/v1
            - name: RABBITMQ_URL
              value: pyamqp://guest@dashdotcollector-queue.dashdot.svc.cluster.local//
- apiVersion: apps/v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: dashdotcollector-flower
    name: dashdotcollector-flower
  spec:
    replicas: 1
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    selector:
      matchLabels:
        app: dashdotcollector-flower
    template:
      metadata:
        labels:
          app: dashdotcollector-flower
      spec:
        containers:
        - image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: dashdotcollector-flower
          args: ["flower"]
          env:
            - name: DASHDOTDB_URL
              value: http://dashdotdb.dashdot.svc.cluster.local/api/v1
            - name: RABBITMQ_URL
              value: pyamqp://guest@dashdotcollector-queue.dashdot.svc.cluster.local//
        - image: ${IMAGE_OAUTH2_PROXY}:${IMAGE_OAUTH2_PROXY_TAG}
          imagePullPolicy: Always
          name: dashdotcollector-flower-oauth2-proxy
          env:
          - name: OAUTH2_PROXY_PROVIDER
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: oauth2.proxy.provider
          - name: OAUTH2_PROXY_GITHUB_ORG
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: oauth2.proxy.github.org
          - name: OAUTH2_PROXY_REDIRECT_URL
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: oauth2.proxy.redirect.url
          - name: OAUTH2_PROXY_COOKIE_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: oauth2.proxy.cookie.secret
          - name: OAUTH2_PROXY_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: oauth2.proxy.client.id
          - name: OAUTH2_PROXY_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: oauth2-proxy
                  key: oauth2.proxy.client.secret
          args:
          - -http-address=0.0.0.0:4180
          - -email-domain=*
          - -upstream=http://localhost:5555
          - -cookie-secret=$(OAUTH2_PROXY_COOKIE_SECRET)
          - -client-id=$(OAUTH2_PROXY_CLIENT_ID)
          - -client-secret=$(OAUTH2_PROXY_CLIENT_SECRET)
          - -provider=$(OAUTH2_PROXY_PROVIDER)
          - -github-org=$(OAUTH2_PROXY_GITHUB_ORG)
          - -redirect-url=$(OAUTH2_PROXY_REDIRECT_URL)
- apiVersion: v1
  kind: Service
  metadata:
    name: oauth2-proxy
    labels:
      app: dashdotcollector-flower
  spec:
    type: ClusterIP
    ports:
      - name: https
        port: 443
        targetPort: 4180
        protocol: TCP
    selector:
      deploymentconfig: dashdotcollector-flower
parameters:
- name: IMAGE
  value: quay.io/app-sre/dashdotcollector
- name: IMAGE_TAG
  value: latest
- name: IMAGE_OAUTH2_PROXY
  value: quay.io/pusher/oauth2_proxy
- name: IMAGE_OAUTH2_PROXY_TAG
  value: v4.0.0-amd64
